// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	slack "gitlab.id.vin/gami/gami-common/adapters/slack"
)

// SlackAdapter is an autogenerated mock type for the SlackAdapter type
type SlackAdapter struct {
	mock.Mock
}

// Send provides a mock function with given fields: request
func (_m *SlackAdapter) Send(request *slack.Request) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(*slack.Request) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSlackAdapter interface {
	mock.TestingT
	Cleanup(func())
}

// NewSlackAdapter creates a new instance of SlackAdapter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSlackAdapter(t mockConstructorTestingTNewSlackAdapter) *SlackAdapter {
	mock := &SlackAdapter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
