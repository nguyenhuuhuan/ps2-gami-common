// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	redsync "github.com/go-redsync/redsync"
)

// RedLock is an autogenerated mock type for the RedLock type
type RedLock struct {
	mock.Mock
}

// NewMutex provides a mock function with given fields: key
func (_m *RedLock) NewMutex(key string) *redsync.Mutex {
	ret := _m.Called(key)

	var r0 *redsync.Mutex
	if rf, ok := ret.Get(0).(func(string) *redsync.Mutex); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*redsync.Mutex)
		}
	}

	return r0
}

type mockConstructorTestingTNewRedLock interface {
	mock.TestingT
	Cleanup(func())
}

// NewRedLock creates a new instance of RedLock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRedLock(t mockConstructorTestingTNewRedLock) *RedLock {
	mock := &RedLock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
