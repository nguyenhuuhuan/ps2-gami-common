// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	queue "gitlab.id.vin/gami/ps2-gami-common/adapters/queue"
)

// ConsumerHandler is an autogenerated mock type for the ConsumerHandler type
type ConsumerHandler struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *ConsumerHandler) Close() {
	_m.Called()
}

// HandlerFunc provides a mock function with given fields: _a0
func (_m *ConsumerHandler) HandlerFunc(_a0 *queue.ConsumerMessage) {
	_m.Called(_a0)
}

type mockConstructorTestingTNewConsumerHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewConsumerHandler creates a new instance of ConsumerHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConsumerHandler(t mockConstructorTestingTNewConsumerHandler) *ConsumerHandler {
	mock := &ConsumerHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
