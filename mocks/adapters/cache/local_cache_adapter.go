// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// LocalCacheAdapter is an autogenerated mock type for the LocalCacheAdapter type
type LocalCacheAdapter struct {
	mock.Mock
}

// Del provides a mock function with given fields: ctx, key
func (_m *LocalCacheAdapter) Del(ctx context.Context, key []string) error {
	ret := _m.Called(ctx, key)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []string) error); ok {
		r0 = rf(ctx, key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: ctx, key, v
func (_m *LocalCacheAdapter) Get(ctx context.Context, key string, v interface{}) error {
	ret := _m.Called(ctx, key, v)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, interface{}) error); ok {
		r0 = rf(ctx, key, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Set provides a mock function with given fields: ctx, key, v, expiration
func (_m *LocalCacheAdapter) Set(ctx context.Context, key string, v interface{}, expiration time.Duration) error {
	ret := _m.Called(ctx, key, v, expiration)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, interface{}, time.Duration) error); ok {
		r0 = rf(ctx, key, v, expiration)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewLocalCacheAdapter interface {
	mock.TestingT
	Cleanup(func())
}

// NewLocalCacheAdapter creates a new instance of LocalCacheAdapter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLocalCacheAdapter(t mockConstructorTestingTNewLocalCacheAdapter) *LocalCacheAdapter {
	mock := &LocalCacheAdapter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
